
#Naive Bayes##
# Splitting the data into the Training set and Testing set
set.seed(277)
ind<- sample(2, nrow(mydata), replace=TRUE, prob=c(0.7, 0.3))
train<- mydata[ind==1,]
test<- mydata [ind==2,]

# Setup for cross validation
train_control <-  trainControl(method="cv",    number= 10)
search_grid<- expand.grid (fL=c(0:5), usekernel=c(TRUE, FALSE) , adjust= 0.5)
# Fitting to the training set
nb.ml<- train(Y~.,
              data=train,
              method = "nb",
              trControl = train_control,
              tuneGrid=search_grid, probability = TRUE)
# Summarize   the    results
# Predicting the test set results
nb.test= predict(nb.ml, test, type= 'prob')[,2]
# Confusion Matrix
confusionMatrix(as.factor(as.numeric(nb.test >0.5)), test$Y, mode="everything", positive= '1')
# Area under the Curve (AUC)
pred<- ROCR::prediction (nb.test, test$Y)
auc2<- performance (pred, "auc")
auc2<- unlist(slot(auc2, "y.values"))
auc2<- round(auc2, 4)
auc2
# ROC Plot for NB 
rocn<- performance(pred, "tpr", "fpr")
plot(rocn,
      colorize=T, cex=4.3, col='black',
      cex.main=1.3, cex.sub=4.3,
      cex.lab=1.3, cex.axis=4.3,
      font.main=4.3,
      font.sub=4.3,
      font.axis=4.3,
      main="ROC Curve of NaiveBayes",
      ylab="Sensitivity",
      xlab=" 1-Specificity")
abline (a=0, b=1)
legend(.8, .2, auc2, title="AUC", cex= 1.0)  

# variable importance 
x<- varImp(nb.ml)
plot(x)

# Reduced Naive Bayes##
str(mydata)
mydata3<- mydata[,c(2,5,7,8,11,12,13,17,19)]
str(mydata3)
# Splitting the data into the Training set and Testing set
set.seed(345)
ind = sample(2, nrow(mydata3), replace=TRUE, prob=c(0.7, 0.3))
train3 = mydata3[ind==1,]
test3 = mydata3[ind==2,]
# Setup for cross validation
train_control <-trainControl(method="cv",    number= 10)
search_grid<- expand.grid (fL=c(0:5), usekernel=c(TRUE, FALSE) , adjust= 0.5)
# Fitting to the training set
nb.ml2<- train(Y~.,
               data=train3,
               method = "nb",
               trControl = train_control,
               tuneGrid=search_grid, probability = TRUE)
# Summarize   the    results
# Predicting the test set results
nb.test2= predict(nb.ml2, test3, type= 'prob')[,2]
# Confusion Matrix
confusionMatrix(as.factor(as.numeric(nb.test2 >0.5)), test3$Y, mode="everything", positive= '1')
# Area under the Curve (AUC)
pred1<- ROCR::prediction(nb.test2, test3$Y)
auc21<- performance (pred1, "auc")
auc21<- unlist(slot(auc21, "y.values"))
auc21<- round(auc21, 4)
auc21
# ROC Plot for reduced NB 
rocnb<- performance(pred1, "tpr", "fpr")
plot(rocnb,
      colorize=T, cex=4.3, col='black',
      cex.main=1.3, cex.sub=4.3,
      cex.lab=1.3, cex.axis=4.3,
      font.main=4.3,
      font.sub=4.3,
      font.axis=4.3,
      main="ROC Curve of Reduced NaiveBayes",
      ylab="Sensitivity",
      xlab=" 1-Specificity")
abline (a=0, b=1)
legend(.8, .2, auc21, title="AUC", cex= 1.0) 
#####

